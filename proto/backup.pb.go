// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backup.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SqlType int32

const (
	SqlType_insert SqlType = 1
	SqlType_update SqlType = 2
	SqlType_delete SqlType = 3
)

var SqlType_name = map[int32]string{
	1: "insert",
	2: "update",
	3: "delete",
}

var SqlType_value = map[string]int32{
	"insert": 1,
	"update": 2,
	"delete": 3,
}

func (x SqlType) Enum() *SqlType {
	p := new(SqlType)
	*p = x
	return p
}

func (x SqlType) String() string {
	return proto.EnumName(SqlType_name, int32(x))
}

func (x *SqlType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SqlType_value, data, "SqlType")
	if err != nil {
		return err
	}
	*x = SqlType(value)
	return nil
}

func (SqlType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_65240d19de191688, []int{0}
}

type Record struct {
	Type                 *SqlType `protobuf:"varint,1,req,name=type,enum=proto.SqlType" json:"type,omitempty"`
	Table                *string  `protobuf:"bytes,2,req,name=table" json:"table,omitempty"`
	Key                  *string  `protobuf:"bytes,3,req,name=key" json:"key,omitempty"`
	Fields               []*Field `protobuf:"bytes,4,rep,name=fields" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_65240d19de191688, []int{0}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetType() SqlType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return SqlType_insert
}

func (m *Record) GetTable() string {
	if m != nil && m.Table != nil {
		return *m.Table
	}
	return ""
}

func (m *Record) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Record) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.SqlType", SqlType_name, SqlType_value)
	proto.RegisterType((*Record)(nil), "proto.record")
}

func init() { proto.RegisterFile("backup.proto", fileDescriptor_65240d19de191688) }

var fileDescriptor_65240d19de191688 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8c, 0x41, 0x0a, 0x83, 0x30,
	0x10, 0x45, 0x31, 0x51, 0x4b, 0x47, 0x91, 0x10, 0xba, 0x08, 0x5d, 0x89, 0x74, 0x21, 0x85, 0xba,
	0xf0, 0x28, 0xb6, 0x17, 0x50, 0x33, 0x05, 0x31, 0xd4, 0x34, 0x8e, 0x0b, 0x7b, 0xfa, 0x62, 0x74,
	0x35, 0x6f, 0xde, 0x83, 0x0f, 0x69, 0xd7, 0xf6, 0xe3, 0x62, 0x2b, 0xeb, 0x26, 0x9a, 0x64, 0xe4,
	0xcf, 0x35, 0xf1, 0x67, 0x77, 0xc5, 0x0f, 0x62, 0x87, 0xfd, 0xe4, 0xb4, 0x2c, 0x20, 0xa4, 0xd5,
	0xa2, 0x0a, 0x72, 0x56, 0x66, 0x75, 0xb6, 0xf7, 0xea, 0xf9, 0x35, 0xaf, 0xd5, 0x62, 0xe3, 0x9b,
	0xbc, 0x40, 0x44, 0x6d, 0x67, 0x50, 0xb1, 0x9c, 0x95, 0xe7, 0x66, 0x7f, 0xa4, 0x00, 0x3e, 0xe2,
	0xaa, 0xb8, 0x77, 0x1b, 0xca, 0x1b, 0xc4, 0xef, 0x01, 0x8d, 0x9e, 0x55, 0x98, 0xf3, 0x32, 0xa9,
	0xd3, 0x63, 0xcd, 0xcb, 0xe6, 0x68, 0xf7, 0x07, 0x9c, 0x8e, 0x79, 0x09, 0x10, 0x0f, 0x9f, 0x19,
	0x1d, 0x89, 0x60, 0xe3, 0xc5, 0xea, 0x96, 0x50, 0xb0, 0x8d, 0x35, 0x1a, 0x24, 0x14, 0xfc, 0x1f,
	0x00, 0x00, 0xff, 0xff, 0x4f, 0xf7, 0x9a, 0x70, 0xcd, 0x00, 0x00, 0x00,
}
